// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define faux (false)
// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define FEATURE(feature, object) feature<self> object{ *this }
#define REDRAW redraw = [&]()
#define RENDER base::render = [&]
#define VT_PROC [](auto& q, auto& p)
#define EVENT_BIND(event_item, param_type) template<e4::tier L> struct e2<L, event_item> { using param = param_type; static constexpr e4::type cause = event_item; static constexpr e4::tier route = L; };
#define SUBMIT(event_level, event_item, event_arg) bell::submit<type_clue<event_item>>(event_level, [&] (ARGTYPE(event_item)& event_arg)
#define SUBMIT_T(event_level, event_item, event_token, event_arg) bell::submit2<type_clue<event_item>>(event_level, event_token) = [&] (ARGTYPE(event_item)& event_arg)
#define SIGNAL(event_level, event_item, event_arg) bell::template signal<event_level>(event_item, static_cast<ARGTYPE(event_item) &>(event_arg))
